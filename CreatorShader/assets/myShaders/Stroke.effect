/*
 * 描边, 取透明点周边12个样本点来判断
 */

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
        edgeColor: { value: [1,1,1,1], editor: { type: color }}
        edgeWidth: { value: 0.001 }
        iResolution: { value: [1280,720] }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <texture>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  uniform IN_PUT_COLOR {
    vec4 edgeColor;
  };

  uniform IN_PUT_VALUE {
    float edgeWidth;
  };
  uniform IN_PUT_SIZE {
    vec2 iResolution;
  };

  // 判断在这个角度上距离为edgeWidth那一点是不是透明
  int getIsStrokeWithAngel(float angel)
  {
    int stroke = 0;
    // pai / 180 = 0.01745329252
    float rad = angel * 0.01745329252; 
    // 单位坐标，iResolution为分辨率
    vec2 unit = 1.0 / iResolution.xy;
    // 偏移量
    vec2 offset = vec2(edgeWidth * cos(rad) * unit.x, edgeWidth * sin(rad) * unit.y);
    float a = texture2D(texture, v_uv0 + offset).a;
    // 我把alpha值大于0.5都视为不透明，小于0.5都视为透明
    if (a >= 0.5) {
        stroke = 1;
    }
    return stroke;
  }


  void main () {
    vec4 myC = texture2D(texture, v_uv0);
    if (myC.a >= 0.5)
    {
        gl_FragColor = v_color * myC;
        return;
    }
    // 每30度取个参考点
    int strokeCount = 0;
    float angel = 0.0;
    for (int i = 0; i < 12; i++) {
       strokeCount += getIsStrokeWithAngel(angel);
       angel = angel + 30.0;
    }

    // 四周围至少有一个点是不透明的，这个点要设成描边颜色
    if (strokeCount > 0) 
    {
        myC.rgb = edgeColor.rgb;
        myC.a = 1.0;
    }

    gl_FragColor = v_color * myC;
  }
}%
